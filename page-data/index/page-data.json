{
    "componentChunkName": "component---src-pages-index-js",
    "path": "/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"15804281-8660-5c6b-a763-faf88ba984ec","excerpt":"개요 Kafka는 Apache Software Foundation의 오픈 소스 메시지 브로커 프로젝트로, 빠르고 확장 가능한 메시지 시스템이다. Amazon Managed Streaming for Kafka (MSK)는 AWS에서 제공하는 완전 관리형 서비스로, 사용자는 설정과 관리를 할 필요가 없고, 신뢰할 수 있는 성능과 보안을 제공한다. 장점 완전 관리형: MSK는 사용자가 설정과 관리를 할 필요가 없고, 자동으로 업그레이드되며 보안과 성능을 유지한다. 스케일 아웃: MSK는 사용자가 쉽게 클러스터를 스케일 아웃할 수 있는 기능을 제공한다. 가격: MSK는 사용량에 따라 요금이 청구되므로 사용자는 사용하는 만큼만 지불할 수 있다. 단점 제한된 기능: MSK는 사용자가 직접 설정하거나 관리할 수 있는 기능이 제한되어 있다. 고가: MSK는 사용량에 따라 요금이 청구되므로 사용량이 많을 경우 비용이 많이 들 수 있다. 사용 사례 MSK는 다양한 사용 사례로 사용될 수 있다. 데이…","frontmatter":{"categories":"KAFKA","title":"Kafka(MSK) 정리 및 사용 사례","date":"April 22, 2023"},"fields":{"slug":"/2023-04-22/kafka(msk)-정리-및-사용-사례04:19:18/"}}},{"node":{"id":"16ff6381-a3d2-5f47-9252-71454b0e0f2d","excerpt":"# DDD 테스트 코드 작성 방법 DDD(Domain-Driven Design) 테스트 코드 작성은 비교적 새로운 기법이지만 소프트웨어 개발을 하는데 많은 도움이 됩니다. 개발자들은 일반적인 테스트 코드 작성과 달리 DDD 테스트 코드 작성 방법에 대해 더 신중하게 고민해야 합니다. DDD 테스트 코드 작성 방법에 대한 정의 DDD(Domain-Driven Design) 테스트 코드 개발은 기본 개발 과정과는 달리 개발을 위해 만들어진 도메인, 제품, 데이터모델과 같은 미리 정의된 모델을 사용합니다. 이는 개발 시에 점진적인 개발이 가능하게 해줍니다. 기본적으로 DDD 테스트 코드 작성 방법과는 다르게 개발에 대하여 다양한 요구사항과 의사 결정이 먼저 들어가게 됩니다. DDD 테스트 코드 작성의 장단점 DDD 테스트 코드 작성 방법은 기존의 개발 방법과 차이가 있지만 관련된 장단점이 있습니다. 장점 다른 시스템과 연동하기 쉽다. 빠른 시간 안에 기능을 추가할 수 있다. 개발 시간이…","frontmatter":{"categories":"JAVA","title":"DDD 테스트 코드 작성 방법 ","date":"April 21, 2023"},"fields":{"slug":"/2023-04-21/ddd-테스트-코드-작성-방법-17:33:01/"}}},{"node":{"id":"d3ae6c28-0ef8-524e-8c40-8e9483469b34","excerpt":"# 자바 가비지 컬렉터에 대한 중요한 사항 자바 가비지 컬렉터에 대한 중요한 사항 자바 가비지 컬렉터(Garbage Collector)는 객체들을 자동으로 수거하여 메모리 누수 방지 및 소멸된 객체들를 최적화하는 작업을 수행함으로써 JVM 메모리 관리를 용이하게 해줍니다.\n이 글에서는 자바 가비지 컬렉터의 기능, 사용 방법, 그리고 자주 발생하는 문제점과 그 대처법에 대해 간단하게 살펴볼 것입니다. 이 글은 10분 이내로 짧게 작성되었습니다. 자바 가비지 컬렉터 활용에 따른 두 가지 주요 이점을 꼽을 수 있습니다. 첫 번째는 소멸된 객체들이 새로운 객체로 대체되기 때문에 메모리 누수가 발생하지 않는다는 것입니다. 두 번째로는 메모리를 최적화하여 JVM 속도를 높이는 것입니다. 하지만 자바 가비지 컬렉터를 사용하면서 발생할 수 있는 문제도 있습니다. 대표적으로는 프로그램 실행 중 잠복상태(Pause)가 발생하는 것이 있습니다. 이 발생한 잠복상태는 여러 이유로 인해 발생할 수 있으며…","frontmatter":{"categories":"JAVA","title":"자바 가비지 컬렉터에 대한 중요한 사항","date":"April 21, 2023"},"fields":{"slug":"/2023-04-21/자바-가비지-컬렉터에-대한-중요한-사항16:55:46/"}}},{"node":{"id":"859109d8-2a19-55aa-80ed-2104af1de43d","excerpt":"제 블로그의 테마나 Gatsby의 다른 테마를 활용해서 Github Blog를 만들고 싶은 분들이 계실텐데요! 이런 분들에게 도움을 드리고자 이 글을 쓰게 되었습니다. 잘 안되는 부분이나 궁금한 점을 댓글로 남겨주면 확인해보고 답변 드리도록 하겠습니다! 1. Repository 생성하기 GitHub Blog를 만들려면 Github에 Repository를 생성해야 합니다.  GitHub에 로그인 한 뒤에 우측 상단에 있는 New Repository 버튼을 클릭하면 repository 생성 페이지로 이동하게 됩니다. 이 때 Import a repository 버튼을 클릭합니다.  아래 페이지에 도달하시면 두 가지 정보를 넣어주셔야 하는데, Your old repository’s clone URL에는 사용하고자 하는 gatsby 테마가 있는 repository의 주소를 넣어주시면 됩니다. 제 블로그 테마를 쓰고 싶으신 분들은 여기에 https://github.com/zoomKoding/…","frontmatter":{"categories":"featured","title":"Gatsby 테마로 GitHub Blog 만들기","date":"July 06, 2021"},"fields":{"slug":"/gatsby-github-blog/"}}},{"node":{"id":"d042fe1f-1fe0-50c8-8519-77792347dabf","excerpt":"👋 소개 블로그를 직접 운영하면서 조금씩 그려봤던 이상적인 개발 블로그 테마를 Gatsby를 통해 만들어보게 되었습니다. 이 테마가 블로그를 운영하고자 하시는 분들에게 자신의 이야기를 잘 담을 수 있는 공간이 되었으면 좋겠습니다.🙌 블로그 테마가 맘에 드셨다면 아래 과정을 통해 자신의 블로그를 만들어보시길 바랍니다! 혹시 만드시는 과정에서 궁금하신 점이나 어려움이 있으시다면 이슈를 통해 문의 남겨주세요! 스타는 블로그 테마를 지속적으로 발전시키는데 큰 힘이 됩니다!⭐️ 🚀 시작하기 Github Page나 Netlify 중 원하시는 배포 환경에 따라 다음 과정을 진행하시면 빠르게 블로그를 만드실 수 있습니다. 🦖 GitHub Page로 만들기 깃헙 페이지를 통해 블로그를 만드시다면 아래 글을 참고해주세요! Gatsby 테마로 GitHub Blog 만들기 🔧 Netlify로 만들기 아래 버튼을 활용하면 개인 계정에 를 사용하고 있는 Repository 생성과 Netlify에 배포를 동시…","frontmatter":{"categories":"블로그","title":"쉽고 빠르게 나만의 개츠비(Gatsby) 블로그 만들기","date":"March 22, 2021"},"fields":{"slug":"/gatsby-starter-soncoding-introduction/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"손민기","bio":{"role":"백엔드 개발자","description":["개발에 미친놈","모든걸 자동화하여 게으러지고 싶은","큰 그림을 그리는 아키텍처"],"thumbnail":"sample.png"},"social":{"github":"https://github.com/smk692","linkedIn":"https://www.linkedin.com/in/%EB%AF%BC%EA%B8%B0-%EC%86%90-12aa94227/","email":"smk2692@gmail.com"}}}}},"pageContext":{}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437","3350743975"]}