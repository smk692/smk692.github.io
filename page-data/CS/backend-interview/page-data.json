{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/CS/backend-interview/",
    "result": {"data":{"cur":{"id":"46bcece5-c3be-5d2d-84d7-0482be6b47ff","html":"<p>👿백엔드 개발 면접에는 가장 일반적인 답변을 원하는 기본적인 질문과 <strong>우리가 함께할 수 있도록</strong> 도움을 줄 수 있는 기타 질문들이 있다.</p>\n<h2 id=\"기본적인-면접-질문\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%EB%A9%B4%EC%A0%91-%EC%A7%88%EB%AC%B8\" aria-label=\"기본적인 면접 질문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>기본적인 면접 질문</em></h2>\n<ul>\n<li>귀하의 개발 스택과 경험 등에 관해 이야기해주시겠습니까?</li>\n<li>당신의 가장 잘하는 분야와 개발 노하우는 무엇입니까?</li>\n<li>개발 경험과 현업 경험, 왜 그것을 선택했습니까?</li>\n</ul>\n<h2 id=\"개발-실력을-밝히는-질문\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C-%EC%8B%A4%EB%A0%A5%EC%9D%84-%EB%B0%9D%ED%9E%88%EB%8A%94-%EC%A7%88%EB%AC%B8\" aria-label=\"개발 실력을 밝히는 질문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>개발 실력을 밝히는 질문</em></h2>\n<ul>\n<li>당신이 개발할 때 어떤 디자인패턴과 테스트 프레임 워크를 사용합니까?</li>\n<li>REST API, SOAP 및 Microservice 개발에 대한 경험이 있습니까?</li>\n<li>고객이 기대하는 솔루션에 대해 설명해주시겠습니까?</li>\n</ul>\n<h3 id=\"1-java에서-다형성polymorphism이란-무엇인가요\" style=\"position:relative;\"><a href=\"#1-java%EC%97%90%EC%84%9C-%EB%8B%A4%ED%98%95%EC%84%B1polymorphism%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"1 java에서 다형성polymorphism이란 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Java에서 다형성(Polymorphism)이란 무엇인가요?</h3>\n<ul>\n<li>다형성은 객체 지향 프로그래밍에서 하나의 메서드나 클래스가 다양한 형태를 갖는 것을 말합니다. Java에서는 메서드 오버로딩, 메서드 오버라이딩, 상속 등의 기능으로 다형성을 구현할 수 있습니다.</li>\n</ul>\n<h3 id=\"2-자바에서-오버로딩overloading과-오버라이딩overriding의-차이는-무엇인가요\" style=\"position:relative;\"><a href=\"#2-%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-%EC%98%A4%EB%B2%84%EB%A1%9C%EB%94%A9overloading%EA%B3%BC-%EC%98%A4%EB%B2%84%EB%9D%BC%EC%9D%B4%EB%94%A9overriding%EC%9D%98-%EC%B0%A8%EC%9D%B4%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"2 자바에서 오버로딩overloading과 오버라이딩overriding의 차이는 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 자바에서 오버로딩(Overloading)과 오버라이딩(Overriding)의 차이는 무엇인가요?</h3>\n<ul>\n<li>오버로딩은 같은 이름의 메서드를 매개변수의 개수나 타입 등을 다르게 정의하는 것을 말하며, 오버라이딩은 상위 클래스에서 정의된 메서드를 하위 클래스에서 재정의하는 것을 말합니다.</li>\n</ul>\n<h3 id=\"3-자바에서-메모리-관리-방식은-무엇인가요\" style=\"position:relative;\"><a href=\"#3-%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC-%EB%B0%A9%EC%8B%9D%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"3 자바에서 메모리 관리 방식은 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 자바에서 메모리 관리 방식은 무엇인가요?</h3>\n<ul>\n<li>\n<p>Java에서는 가비지 컬렉터(Garbage Collector)가 자동으로 메모리를 관리합니다.</p>\n</li>\n<li>\n<p>가비지 컬렉터는 더 이상 사용되지 않는 객체를 자동으로 파악하고 삭제하여 메모리를 확보합니다.</p>\n</li>\n</ul>\n<h3 id=\"4-자바에서-스레드thread란-무엇인가요\" style=\"position:relative;\"><a href=\"#4-%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-%EC%8A%A4%EB%A0%88%EB%93%9Cthread%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"4 자바에서 스레드thread란 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 자바에서 스레드(Thread)란 무엇인가요?</h3>\n<ul>\n<li>스레드는 프로그램에서 실행되는 최소의 단위로, 한 번에 여러 개의 작업을 동시에 처리할 수 있습니다. Java에서는 스레드를 구현하기 위해 Thread 클래스를 제공합니다.</li>\n</ul>\n<h3 id=\"5-자바에서-동기화synchronization란-무엇이며-어떻게-구현할-수-있나요\" style=\"position:relative;\"><a href=\"#5-%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-%EB%8F%99%EA%B8%B0%ED%99%94synchronization%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%EC%96%B4%EB%96%BB%EA%B2%8C-%EA%B5%AC%ED%98%84%ED%95%A0-%EC%88%98-%EC%9E%88%EB%82%98%EC%9A%94\" aria-label=\"5 자바에서 동기화synchronization란 무엇이며 어떻게 구현할 수 있나요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 자바에서 동기화(Synchronization)란 무엇이며, 어떻게 구현할 수 있나요?</h3>\n<ul>\n<li>동기화는 여러 스레드가 동시에 하나의 자원을 사용할 때, 순서를 지정하여 충돌을 방지하는 것을 말합니다. Java에서는 synchronized 키워드를 사용하여 메서드나 블록을 동기화할 수 있습니다.</li>\n</ul>\n<h3 id=\"6-자바에서-컬렉션collection-프레임워크란-무엇인가요\" style=\"position:relative;\"><a href=\"#6-%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-%EC%BB%AC%EB%A0%89%EC%85%98collection-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"6 자바에서 컬렉션collection 프레임워크란 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 자바에서 컬렉션(Collection) 프레임워크란 무엇인가요?</h3>\n<ul>\n<li>컬렉션 프레임워크는 데이터 그룹을 다루기 위한 인터페이스와 클래스의 집합을 말합니다. Java에서는 List, Set, Map 등의 인터페이스와 이를 구현한 클래스를 제공합니다.</li>\n</ul>\n<h3 id=\"7-자바에서-exception과-error의-차이는-무엇인가요\" style=\"position:relative;\"><a href=\"#7-%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-exception%EA%B3%BC-error%EC%9D%98-%EC%B0%A8%EC%9D%B4%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"7 자바에서 exception과 error의 차이는 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 자바에서 Exception과 Error의 차이는 무엇인가요?</h3>\n<ul>\n<li>Exception은 프로그램 실행 중 발생하는 일반적인 예외 상황을 처리할 때 사용하며, Error는 프로그램이 복구할 수 없는 치명적인 오류를 나타냅니다.</li>\n</ul>\n<h3 id=\"8-자바에서-garbage-collectiongc이란-무엇이며-어떻게-작동하나요\" style=\"position:relative;\"><a href=\"#8-%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-garbage-collectiongc%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%9E%91%EB%8F%99%ED%95%98%EB%82%98%EC%9A%94\" aria-label=\"8 자바에서 garbage collectiongc이란 무엇이며 어떻게 작동하나요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. 자바에서 Garbage Collection(GC)이란 무엇이며, 어떻게 작동하나요?</h3>\n<ul>\n<li>Garbage Collection은 자동으로 사용되지 않는 객체를 파악하고 삭제하여 메모리를 확보합니다. GC는 JVM(Java Virtual Machine)이 관리하며, 메모리 할당과 해제를 자동으로 수행합니다.</li>\n<li>GC는 객체의 참조 횟수를 계산하여 더 이상 참조되지 않는 객체를 파악하고, 이를 메모리에서 제거하여 확보합니다.</li>\n</ul>\n<h3 id=\"9-자바에서-직렬화serialization란-무엇이며-어떻게-구현할-수-있나요\" style=\"position:relative;\"><a href=\"#9-%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-%EC%A7%81%EB%A0%AC%ED%99%94serialization%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%EC%96%B4%EB%96%BB%EA%B2%8C-%EA%B5%AC%ED%98%84%ED%95%A0-%EC%88%98-%EC%9E%88%EB%82%98%EC%9A%94\" aria-label=\"9 자바에서 직렬화serialization란 무엇이며 어떻게 구현할 수 있나요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9. 자바에서 직렬화(Serialization)란 무엇이며, 어떻게 구현할 수 있나요?</h3>\n<ul>\n<li>직렬화는 객체를 바이트 스트림으로 변환하는 과정을 말합니다. Java에서는 Serializable 인터페이스를 구현하여 객체를 직렬화할 수 있습니다.</li>\n</ul>\n<h3 id=\"10-자바에서-jdbc란-무엇이며-어떻게-사용하나요\" style=\"position:relative;\"><a href=\"#10-%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-jdbc%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%82%98%EC%9A%94\" aria-label=\"10 자바에서 jdbc란 무엇이며 어떻게 사용하나요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10. 자바에서 JDBC란 무엇이며, 어떻게 사용하나요?</h3>\n<ul>\n<li>JDBC(Java Database Connectivity)는 자바에서 데이터베이스에 접속하여 데이터를 처리하는 데 사용하는 API입니다.</li>\n<li>JDBC는 DriverManager, Connection, Statement 등의 인터페이스와 클래스를 제공하며, 데이터베이스 연결, 쿼리 실행, 결과 처리 등의 작업을 수행할 수 있습니다. 예를 들어, 데이터베이스 연결을 위해서는 DriverManager.getConnection() 메서드를 사용할 수 있습니다.</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%EB%A9%B4%EC%A0%91-%EC%A7%88%EB%AC%B8\"><em>기본적인 면접 질문</em></a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B0%9C%EB%B0%9C-%EC%8B%A4%EB%A0%A5%EC%9D%84-%EB%B0%9D%ED%9E%88%EB%8A%94-%EC%A7%88%EB%AC%B8\"><em>개발 실력을 밝히는 질문</em></a></p>\n<ul>\n<li><a href=\"#1-java%EC%97%90%EC%84%9C-%EB%8B%A4%ED%98%95%EC%84%B1polymorphism%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">1. Java에서 다형성(Polymorphism)이란 무엇인가요?</a></li>\n<li><a href=\"#2-%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-%EC%98%A4%EB%B2%84%EB%A1%9C%EB%94%A9overloading%EA%B3%BC-%EC%98%A4%EB%B2%84%EB%9D%BC%EC%9D%B4%EB%94%A9overriding%EC%9D%98-%EC%B0%A8%EC%9D%B4%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">2. 자바에서 오버로딩(Overloading)과 오버라이딩(Overriding)의 차이는 무엇인가요?</a></li>\n<li><a href=\"#3-%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC-%EB%B0%A9%EC%8B%9D%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">3. 자바에서 메모리 관리 방식은 무엇인가요?</a></li>\n<li><a href=\"#4-%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-%EC%8A%A4%EB%A0%88%EB%93%9Cthread%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">4. 자바에서 스레드(Thread)란 무엇인가요?</a></li>\n<li><a href=\"#5-%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-%EB%8F%99%EA%B8%B0%ED%99%94synchronization%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%EC%96%B4%EB%96%BB%EA%B2%8C-%EA%B5%AC%ED%98%84%ED%95%A0-%EC%88%98-%EC%9E%88%EB%82%98%EC%9A%94\">5. 자바에서 동기화(Synchronization)란 무엇이며, 어떻게 구현할 수 있나요?</a></li>\n<li><a href=\"#6-%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-%EC%BB%AC%EB%A0%89%EC%85%98collection-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">6. 자바에서 컬렉션(Collection) 프레임워크란 무엇인가요?</a></li>\n<li><a href=\"#7-%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-exception%EA%B3%BC-error%EC%9D%98-%EC%B0%A8%EC%9D%B4%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">7. 자바에서 Exception과 Error의 차이는 무엇인가요?</a></li>\n<li><a href=\"#8-%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-garbage-collectiongc%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%9E%91%EB%8F%99%ED%95%98%EB%82%98%EC%9A%94\">8. 자바에서 Garbage Collection(GC)이란 무엇이며, 어떻게 작동하나요?</a></li>\n<li><a href=\"#9-%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-%EC%A7%81%EB%A0%AC%ED%99%94serialization%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%EC%96%B4%EB%96%BB%EA%B2%8C-%EA%B5%AC%ED%98%84%ED%95%A0-%EC%88%98-%EC%9E%88%EB%82%98%EC%9A%94\">9. 자바에서 직렬화(Serialization)란 무엇이며, 어떻게 구현할 수 있나요?</a></li>\n<li><a href=\"#10-%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-jdbc%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%82%98%EC%9A%94\">10. 자바에서 JDBC란 무엇이며, 어떻게 사용하나요?</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"👿백엔드 개발 면접에는 가장 일반적인 답변을 원하는 기본적인 질문과 우리가 함께할 수 있도록 도움을 줄 수 있는 기타 질문들이 있다. 기본적인 면접 질문 귀하의 개발 스택과 경험 등에 관해 이야기해주시겠습니까? 당신의 가장 잘하는 분야와 개발 노하우는 무엇입니까? 개발 경험과 현업 경험, 왜 그것을 선택했습니까? 개발 실력을 밝히는 질문 당신이 개발할 때 어떤 디자인패턴과 테스트 프레임 워크를 사용합니까? REST API, SOAP 및 Microservice 개발에 대한 경험이 있습니까? 고객이 기대하는 솔루션에 대해 설명해주시겠습니까? 1. Java에서 다형성(Polymorphism)이란 무엇인가요? 다형성은 객체 지향 프로그래밍에서 하나의 메서드나 클래스가 다양한 형태를 갖는 것을 말합니다. Java에서는 메서드 오버로딩, 메서드 오버라이딩, 상속 등의 기능으로 다형성을 구현할 수 있습니다. 2. 자바에서 오버로딩(Overloading)과 오버라이딩(Overriding)의 차이…","frontmatter":{"date":"April 25, 2023","title":"👿백엔드 개발 면접 질문1","categories":"CS","author":"손(Son/손민기)","emoji":"😱"},"fields":{"slug":"/CS/backend-interview/"}},"next":{"id":"ed3a35a6-abd3-50a0-843a-27162547b3c3","html":"<h2 id=\"서론\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%A1%A0\" aria-label=\"서론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서론</h2>\n<h2 id=\"kubernetes-이해\" style=\"position:relative;\"><a href=\"#kubernetes-%EC%9D%B4%ED%95%B4\" aria-label=\"kubernetes 이해 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Kubernetes 이해</h2>\n<blockquote>\n<p>쿠버네티스는 컨테이너화된 워크로드와 서비스를 관리하기 위한 이식성이 있고, 확장가능한 오픈소스 플랫폼이다.</p>\n</blockquote>\n<blockquote>\n<p>쿠버네티스는 선언적 구성과 자동화를 모두 용이하게 해준다. 쿠버네티스는 크고, 빠르게 성장하는 생태계를 가지고있다.\n쿠버네티스 서비스, 기술 지원 및 도구는 어디서나 쉽게 이용할 수 있다.</p>\n</blockquote>\n<blockquote>\n<p><img src=\"content/terraform-standard/eks.md\" alt=\"eks-1.png\"></p>\n</blockquote>\n<h2 id=\"eks-무엇인가요\" style=\"position:relative;\"><a href=\"#eks-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"eks 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>EKS 무엇인가요?</h2>\n<ul>\n<li>EKS는 아마존 웹 서비스에서 제공하는 관리형 Kubernetes 서비스입니다. Kubernetes는 컨테이너 오케스트레이션 플랫폼으로, 대규모 애플리케이션을 배포, 확장 및 관리하는 데 사용됩니다. EKS를 사용하면 Kubernetes 클러스터를 쉽게 배포하고 관리할 수 있습니다.</li>\n</ul>\n<h3 id=\"eks를-사용하는-이유는-다음과-같습니다\" style=\"position:relative;\"><a href=\"#eks%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0%EB%8A%94-%EB%8B%A4%EC%9D%8C%EA%B3%BC-%EA%B0%99%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"eks를 사용하는 이유는 다음과 같습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>EKS를 사용하는 이유는 다음과 같습니다.</h3>\n<ul>\n<li>\n<p>관리형 서비스: EKS는 Kubernetes 마스터를 자동으로 프로비저닝하고 관리하므로 사용자는 클러스터 관리에 집중할 필요가 없습니다.</p>\n</li>\n<li>\n<p>확장성: EKS는 AWS의 다른 서비스와 통합되어 확장성이 높은 애플리케이션을 빠르게 배포할 수 있도록 지원합니다.</p>\n</li>\n<li>\n<p>보안: EKS는 AWS 보안 및 규정 준수 요구 사항을 충족하도록 설계되었습니다.</p>\n</li>\n</ul>\n<p>테라폼은 인프라스트럭처 코드(Infrastructure as Code, IaC)를 작성하는 데 사용되는 도구 중 하나입니다. 테라폼으로 EKS를 배포하면 다음과 같은 이점이 있습니다.</p>\n<ul>\n<li>\n<p>반복적인 작업 감소: 테라폼으로 EKS 클러스터를 배포하면, 클러스터를 반복적으로 생성하거나 관리해야 할 때 편리합니다.</p>\n</li>\n<li>\n<p>코드 관리: 테라폼으로 EKS를 배포하면 코드 버전 관리를 할 수 있으므로, 코드 변경 사항을 추적하고 롤백할 수 있습니다.</p>\n</li>\n<li>\n<p>재현성: 테라폼으로 EKS를 배포하면 인프라를 재현할 수 있습니다. 이것은 개발, 테스트 및 운영 환경 간의 일관성을 유지하는 데 도움이 됩니다.</p>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%84%9C%EB%A1%A0\">서론</a></p>\n</li>\n<li>\n<p><a href=\"#kubernetes-%EC%9D%B4%ED%95%B4\">Kubernetes 이해</a></p>\n</li>\n<li>\n<p><a href=\"#eks-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">EKS 무엇인가요?</a></p>\n<ul>\n<li><a href=\"#eks%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0%EB%8A%94-%EB%8B%A4%EC%9D%8C%EA%B3%BC-%EA%B0%99%EC%8A%B5%EB%8B%88%EB%8B%A4\">EKS를 사용하는 이유는 다음과 같습니다.</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"April 25, 2023","title":"💡EKS 기초 지식","categories":"인프라","author":"손(Son/손민기)","emoji":"💡"},"fields":{"slug":"/infra/terraform-standard/eks/"}},"prev":{"id":"44335ff4-ccb3-5c39-80bc-fa88dfee0cc5","html":"<h2 id=\"백엔드-개발-면접-질문2\" style=\"position:relative;\"><a href=\"#%EB%B0%B1%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C-%EB%A9%B4%EC%A0%91-%EC%A7%88%EB%AC%B82\" aria-label=\"백엔드 개발 면접 질문2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👿백엔드 개발 면접 질문2</h2>\n<p>👿백엔드 개발 면접에는 가장 일반적인 답변을 원하는 기본적인 질문과 <strong>우리가 함께할 수 있도록</strong> 도움을 줄 수 있는 기타 질문들이 있다.</p>\n<h3 id=\"1-백엔드에서-가장-많이-사용하는-언어는-무엇인가요\" style=\"position:relative;\"><a href=\"#1-%EB%B0%B1%EC%97%94%EB%93%9C%EC%97%90%EC%84%9C-%EA%B0%80%EC%9E%A5-%EB%A7%8E%EC%9D%B4-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%96%B8%EC%96%B4%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"1 백엔드에서 가장 많이 사용하는 언어는 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 백엔드에서 가장 많이 사용하는 언어는 무엇인가요?</h3>\n<ul>\n<li>대부분의 백엔드에서는 Java, Python, Ruby, Kotlin, Node.js 등을 사용합니다.</li>\n</ul>\n<p>이 중에서 Java가 가장 많이 사용됩니다. Java는 객체 지향 프로그래밍 언어이며, 안정성과 확장성이 높아 대규모 애플리케이션에 적합합니다. 하지만 Kotlin 많이 이관하는 추세입니다.</p>\n<h3 id=\"2-rest-api와-soap의-차이점은-무엇인가요\" style=\"position:relative;\"><a href=\"#2-rest-api%EC%99%80-soap%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"2 rest api와 soap의 차이점은 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. REST API와 SOAP의 차이점은 무엇인가요?</h3>\n<ul>\n<li>\n<p>REST API는 HTTP 프로토콜을 사용하고, SOAP는 XML을 사용합니다. 또한 REST API는 간결하고 가벼우며, SOAP는 보안이 강화되고 표준화된 인터페이스를 제공합니다.</p>\n</li>\n<li>\n<p>REST API는 간단하고 확장성이 뛰어나며, 사용이 쉽지만, 복잡한 트랜잭션을 처리하는데는 한계가 있습니다. 반면 SOAP는 보안성과 안정성이 높으며, 대규모 시스템에서 사용하기 좋습니다.</p>\n</li>\n</ul>\n<h3 id=\"3-마이크로서비스-아키텍처란-무엇인가요\" style=\"position:relative;\"><a href=\"#3-%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"3 마이크로서비스 아키텍처란 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 마이크로서비스 아키텍처란 무엇인가요?</h3>\n<ul>\n<li>\n<p>마이크로서비스 아키텍처는 작고 독립적인 서비스들이 모여서 하나의 애플리케이션을 구성하는 아키텍처입니다.</p>\n</li>\n<li>\n<p>아키텍처는 각각의 서비스가 서로 다른 기술 스택을 사용할 수 있어 개발자의 자유도가 높고, 서비스 간의 결합도가 낮아 유연성이 높습니다. 또한, 서비스가 분리되어 있어 단일 서비스의 장애가 전체 시스템에 영향을 미치지 않습니다.</p>\n</li>\n</ul>\n<h3 id=\"4-nosql과-rdbms의-차이점은-무엇인가요\" style=\"position:relative;\"><a href=\"#4-nosql%EA%B3%BC-rdbms%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"4 nosql과 rdbms의 차이점은 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. NoSQL과 RDBMS의 차이점은 무엇인가요?</h3>\n<ul>\n<li>\n<p>NoSQL은 스키마가 없거나 유연한 스키마를 가지며, 확장성과 가용성이 높습니다. RDBMS는 정확한 스키마를 가지며, 안정성과 일관성이 높습니다.</p>\n</li>\n<li>\n<p>NoSQL은 데이터의 유형이나 형식을 바꾸는 경우에도 비교적 자유롭지만, RDBMS는 변경에 대한 엄격한 검증 절차가 필요합니다.</p>\n</li>\n</ul>\n<h3 id=\"5-인증과-인가의-차이점은-무엇인가요\" style=\"position:relative;\"><a href=\"#5-%EC%9D%B8%EC%A6%9D%EA%B3%BC-%EC%9D%B8%EA%B0%80%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"5 인증과 인가의 차이점은 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 인증과 인가의 차이점은 무엇인가요?</h3>\n<ul>\n<li>\n<p>인증은 제품이나 서비스의 기능이나 특성을 검증하는 과정이고, 인가는 권한을 부여하는 과정입니다.</p>\n</li>\n<li>\n<p>예를 들어, 제품이 CE 인증을 받는다는 것은 제품이 EU 기준을 충족한다는 것을 의미합니다. 반면에, 인가는 예를 들어 시스템 관리자가 특정 서버에 접근한 권한을 부여하는 것입니다.</p>\n</li>\n</ul>\n<h3 id=\"6-세션과-쿠키의-차이점은-무엇인가요\" style=\"position:relative;\"><a href=\"#6-%EC%84%B8%EC%85%98%EA%B3%BC-%EC%BF%A0%ED%82%A4%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"6 세션과 쿠키의 차이점은 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 세션과 쿠키의 차이점은 무엇인가요?</h3>\n<ul>\n<li>\n<p>세션은 서버 측에서 데이터를 저장하고, 쿠키는 클라이언트 측에서 데이터를 저장합니다.</p>\n</li>\n<li>\n<p>세션은 클라이언트가 서버에 접속할 때 생성되며, 서버에 의해 유지됩니다.</p>\n</li>\n<li>\n<p>쿠키는 브라우저에 저장되며, 만료 기간이 설정되면 삭제됩니다.</p>\n</li>\n<li>\n<p>세션은 중요한 데이터를 저장하기에 적합하고, 쿠키는 세션 ID나 사용자 기본 설정과 같은 정보를 저장하기에 적합합니다.</p>\n</li>\n</ul>\n<h3 id=\"7-http와-https의-차이점은-무엇인가요\" style=\"position:relative;\"><a href=\"#7-http%EC%99%80-https%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"7 http와 https의 차이점은 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. HTTP와 HTTPS의 차이점은 무엇인가요?</h3>\n<ul>\n<li>\n<p>HTTP는 암호화되지 않은 텍스트 기반 프로토콜이고, HTTPS는 암호화된 데이터 전송을 제공하는 HTTP의 보안 버전입니다.</p>\n</li>\n<li>\n<p>HTTPS는 SSL(Secure Sockets Layer) 또는 TLS(Transport Layer Security) 프로토콜을 사용하여 데이터를 암호화하고 보호합니다.</p>\n</li>\n</ul>\n<h3 id=\"8-서버리스-아키텍처란-무엇인가요\" style=\"position:relative;\"><a href=\"#8-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"8 서버리스 아키텍처란 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. 서버리스 아키텍처란 무엇인가요?</h3>\n<ul>\n<li>\n<p>서버리스 아키텍처는 개발자가 서버의 관리나 운영에 대한 부담을 줄이기 위해 고안된 아키텍처입니다.</p>\n</li>\n<li>\n<p>서버리스 아키텍처에서는 서버가 필요하지 않으며, 함수를 실행하는 서비스가 제공됩니다. 이를 통해 개발자는 코드를 작성하고 배포하는 것에 집중할 수 있습니다.</p>\n</li>\n</ul>\n<h3 id=\"9-mvc-패턴이란-무엇인가요\" style=\"position:relative;\"><a href=\"#9-mvc-%ED%8C%A8%ED%84%B4%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"9 mvc 패턴이란 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9. MVC 패턴이란 무엇인가요?</h3>\n<ul>\n<li>\n<p>MVC는 Model-View-Controller의 약자로, 애플리케이션의 구성 요소를 모델, 뷰, 컨트롤러로 나누어서 설계하는 패턴입니다.</p>\n</li>\n<li>\n<p>모델은 데이터와 비즈니스 로직을 처리하고, 뷰는 사용자에게 정보를 보여주는 역할을 하며, 컨트롤러는 모델과 뷰 사이에서 조율하는 역할을 합니다.</p>\n</li>\n</ul>\n<h3 id=\"10-orm이란-무엇인가요\" style=\"position:relative;\"><a href=\"#10-orm%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"10 orm이란 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10. ORM이란 무엇인가요?</h3>\n<ul>\n<li>\n<p>ORM은 Object-Relational Mapping의 약자로, 객체와 관계형 데이터베이스 간의 매핑을 자동화하는 프레임워크입니다.</p>\n</li>\n<li>\n<p>ORM을 사용하면 SQL 쿼리를 직접 작성하지 않아도 객체를 데이터베이스에 저장하거나 조회할 수 있습니다.</p>\n</li>\n<li>\n<p>ex) JPA (Hibernate)…</p>\n</li>\n</ul>\n<h3 id=\"11-sql-injection과-같은-보안-취약점을-방지하기-위한-방법은-무엇인가요\" style=\"position:relative;\"><a href=\"#11-sql-injection%EA%B3%BC-%EA%B0%99%EC%9D%80-%EB%B3%B4%EC%95%88-%EC%B7%A8%EC%95%BD%EC%A0%90%EC%9D%84-%EB%B0%A9%EC%A7%80%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%9C-%EB%B0%A9%EB%B2%95%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"11 sql injection과 같은 보안 취약점을 방지하기 위한 방법은 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11. SQL injection과 같은 보안 취약점을 방지하기 위한 방법은 무엇인가요?</h3>\n<ul>\n<li>\n<p>SQL 인젝션은 악의적인 사용자가 입력한 데이터를 이용하여 데이터베이스에 액세스하는 공격입니다.</p>\n</li>\n<li>\n<p>SQL 인젝션을 방지하기 위해, 입력 데이터를 검증하고 이스케이프 문자열 처리를 해야 합니다. 또한, 프리페어드 스테이트먼트를 사용하여 SQL 쿼리를 작성하고, 권한을 최소화하는 등의 방법을 사용할 수 있습니다.</p>\n</li>\n</ul>\n<h3 id=\"12-cdn이란-무엇인가요\" style=\"position:relative;\"><a href=\"#12-cdn%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"12 cdn이란 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>12. CDN이란 무엇인가요?</h3>\n<ul>\n<li>CDN은 Content Delivery Network의 약자로, 전 세계에 분산된 서버 네트워크를 통해 콘텐츠를 제공하는 시스템입니다.</li>\n<li>CDN은 웹사이트의 로딩 속도를 빠르게 하고, 대역폭을 절약할 수 있습니다.</li>\n</ul>\n<h3 id=\"13-aws와-같은-클라우드-서비스를-사용해본-경험이-있나요-있으면-장점도-말해주세요\" style=\"position:relative;\"><a href=\"#13-aws%EC%99%80-%EA%B0%99%EC%9D%80-%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%EC%84%9C%EB%B9%84%EC%8A%A4%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B8-%EA%B2%BD%ED%97%98%EC%9D%B4-%EC%9E%88%EB%82%98%EC%9A%94-%EC%9E%88%EC%9C%BC%EB%A9%B4-%EC%9E%A5%EC%A0%90%EB%8F%84-%EB%A7%90%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94\" aria-label=\"13 aws와 같은 클라우드 서비스를 사용해본 경험이 있나요 있으면 장점도 말해주세요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>13. AWS와 같은 클라우드 서비스를 사용해본 경험이 있나요? 있으면 장점도 말해주세요.</h3>\n<ul>\n<li>\n<p>예, 저는 AWS를 사용해본 경험이 있습니다.</p>\n</li>\n<li>\n<p>AWS는 클라우드 컴퓨팅 서비스를 제공하는 아마존의 플랫폼입니다. AWS를 사용하면 서버, 데이터베이스, 스토리지 등을 쉽게 구축하고 관리할 수 있습니다.</p>\n</li>\n</ul>\n<h3 id=\"14-빅데이터-처리를-위해-자주-사용하는-기술은-무엇인가요\" style=\"position:relative;\"><a href=\"#14-%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC%EB%A5%BC-%EC%9C%84%ED%95%B4-%EC%9E%90%EC%A3%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EA%B8%B0%EC%88%A0%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\" aria-label=\"14 빅데이터 처리를 위해 자주 사용하는 기술은 무엇인가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>14. 빅데이터 처리를 위해 자주 사용하는 기술은 무엇인가요?</h3>\n<ul>\n<li>\n<p>대용량 데이터 처리를 위해 저는 하둡, 스파크 등의 기술을 주로 사용합니다.</p>\n</li>\n<li>\n<p>하둡은 대용량 데이터를 분산 저장하고 처리하는 데 사용되는 오픈소스 소프트웨어 프레임워크입니다.</p>\n</li>\n<li>\n<p>스파크는 하둡과 유사한 기능을 제공하지만, 인메모리 처리와 스트림 처리 등의 추가 기능을 제공합니다.</p>\n</li>\n</ul>\n<h3 id=\"15-도커와-쿠버네티스에-대해-설명해주세요\" style=\"position:relative;\"><a href=\"#15-%EB%8F%84%EC%BB%A4%EC%99%80-%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4%EC%97%90-%EB%8C%80%ED%95%B4-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94\" aria-label=\"15 도커와 쿠버네티스에 대해 설명해주세요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>15. 도커와 쿠버네티스에 대해 설명해주세요.</h3>\n<ul>\n<li>\n<p>도커는 컨테이너 기반 가상화 플랫폼으로, 애플리케이션을 컨테이너에 패키징하여 독립적으로 실행할 수 있습니다.</p>\n</li>\n<li>\n<p>쿠버네티스는 컨테이너 오케스트레이션 툴로, 도커와 같은 컨테이너 기술을 사용하는 애플리케이션을 자동으로 배포, 확장, 관리할 수 있습니다.</p>\n</li>\n<li>\n<p>쿠버네티스는 여러 대의 서버에 컨테이너를 분산 배치하여 고가용성, 확장성 등의 이점을 제공합니다.</p>\n</li>\n</ul>\n<h3 id=\"16-도커와-vm-차이점을-설명해주세요\" style=\"position:relative;\"><a href=\"#16-%EB%8F%84%EC%BB%A4%EC%99%80-vm-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%84-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94\" aria-label=\"16 도커와 vm 차이점을 설명해주세요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>16. 도커와 VM 차이점을 설명해주세요.</h3>\n<ul>\n<li>\n<p>VM은 전체 시스템을 가상화하는 반면 Docker 컨테이너는 개별 애플리케이션을 가상화합니다.</p>\n</li>\n<li>\n<p>VM은 서로 다른 운영 체제 간에 완전한 격리를 제공하는 반면 Docker 컨테이너는 호스트 시스템의 운영 체제 커널을 공유하여 효율성과 속도를 높입니다.</p>\n</li>\n</ul>\n<p>간단하게 적어서 혼돈되는 내용 댓글로 달아주시면 자세하게 설명하겠습니다.</p>\n<p>끝!</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EB%B0%B1%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C-%EB%A9%B4%EC%A0%91-%EC%A7%88%EB%AC%B82\">👿백엔드 개발 면접 질문2</a></p>\n<ul>\n<li><a href=\"#1-%EB%B0%B1%EC%97%94%EB%93%9C%EC%97%90%EC%84%9C-%EA%B0%80%EC%9E%A5-%EB%A7%8E%EC%9D%B4-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%96%B8%EC%96%B4%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">1. 백엔드에서 가장 많이 사용하는 언어는 무엇인가요?</a></li>\n<li><a href=\"#2-rest-api%EC%99%80-soap%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">2. REST API와 SOAP의 차이점은 무엇인가요?</a></li>\n<li><a href=\"#3-%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">3. 마이크로서비스 아키텍처란 무엇인가요?</a></li>\n<li><a href=\"#4-nosql%EA%B3%BC-rdbms%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">4. NoSQL과 RDBMS의 차이점은 무엇인가요?</a></li>\n<li><a href=\"#5-%EC%9D%B8%EC%A6%9D%EA%B3%BC-%EC%9D%B8%EA%B0%80%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">5. 인증과 인가의 차이점은 무엇인가요?</a></li>\n<li><a href=\"#6-%EC%84%B8%EC%85%98%EA%B3%BC-%EC%BF%A0%ED%82%A4%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">6. 세션과 쿠키의 차이점은 무엇인가요?</a></li>\n<li><a href=\"#7-http%EC%99%80-https%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">7. HTTP와 HTTPS의 차이점은 무엇인가요?</a></li>\n<li><a href=\"#8-%EC%84%9C%EB%B2%84%EB%A6%AC%EC%8A%A4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">8. 서버리스 아키텍처란 무엇인가요?</a></li>\n<li><a href=\"#9-mvc-%ED%8C%A8%ED%84%B4%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">9. MVC 패턴이란 무엇인가요?</a></li>\n<li><a href=\"#10-orm%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">10. ORM이란 무엇인가요?</a></li>\n<li><a href=\"#11-sql-injection%EA%B3%BC-%EA%B0%99%EC%9D%80-%EB%B3%B4%EC%95%88-%EC%B7%A8%EC%95%BD%EC%A0%90%EC%9D%84-%EB%B0%A9%EC%A7%80%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%9C-%EB%B0%A9%EB%B2%95%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">11. SQL injection과 같은 보안 취약점을 방지하기 위한 방법은 무엇인가요?</a></li>\n<li><a href=\"#12-cdn%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">12. CDN이란 무엇인가요?</a></li>\n<li><a href=\"#13-aws%EC%99%80-%EA%B0%99%EC%9D%80-%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%EC%84%9C%EB%B9%84%EC%8A%A4%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B8-%EA%B2%BD%ED%97%98%EC%9D%B4-%EC%9E%88%EB%82%98%EC%9A%94-%EC%9E%88%EC%9C%BC%EB%A9%B4-%EC%9E%A5%EC%A0%90%EB%8F%84-%EB%A7%90%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94\">13. AWS와 같은 클라우드 서비스를 사용해본 경험이 있나요? 있으면 장점도 말해주세요.</a></li>\n<li><a href=\"#14-%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B2%98%EB%A6%AC%EB%A5%BC-%EC%9C%84%ED%95%B4-%EC%9E%90%EC%A3%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EA%B8%B0%EC%88%A0%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94\">14. 빅데이터 처리를 위해 자주 사용하는 기술은 무엇인가요?</a></li>\n<li><a href=\"#15-%EB%8F%84%EC%BB%A4%EC%99%80-%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4%EC%97%90-%EB%8C%80%ED%95%B4-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94\">15. 도커와 쿠버네티스에 대해 설명해주세요.</a></li>\n<li><a href=\"#16-%EB%8F%84%EC%BB%A4%EC%99%80-vm-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%84-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94\">16. 도커와 VM 차이점을 설명해주세요.</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"April 26, 2023","title":"👿백엔드 개발 면접 질문2","categories":"CS","author":"손(Son/손민기)","emoji":"😱"},"fields":{"slug":"/CS/backend-interview2/"}},"site":{"siteMetadata":{"siteUrl":"https://smk692.github.io","comments":{"utterances":{"repo":"smk692/blog-comments"}}}}},"pageContext":{"slug":"/CS/backend-interview/","nextSlug":"/infra/terraform-standard/eks/","prevSlug":"/CS/backend-interview2/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}