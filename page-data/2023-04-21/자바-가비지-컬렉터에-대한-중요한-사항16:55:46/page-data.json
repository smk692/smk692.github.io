{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/2023-04-21/자바-가비지-컬렉터에-대한-중요한-사항16:55:46/",
    "result": {"data":{"cur":{"id":"bcb0ddd3-4432-5bb0-ba51-be9e1f9f81af","html":"<h1 id=\"-자바-가비지-컬렉터에-대한-중요한-사항\" style=\"position:relative;\"><a href=\"#-%EC%9E%90%EB%B0%94-%EA%B0%80%EB%B9%84%EC%A7%80-%EC%BB%AC%EB%A0%89%ED%84%B0%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A4%91%EC%9A%94%ED%95%9C-%EC%82%AC%ED%95%AD\" aria-label=\" 자바 가비지 컬렉터에 대한 중요한 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a># 자바 가비지 컬렉터에 대한 중요한 사항</h1>\n<h1 id=\"자바-가비지-컬렉터에-대한-중요한-사항\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94-%EA%B0%80%EB%B9%84%EC%A7%80-%EC%BB%AC%EB%A0%89%ED%84%B0%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A4%91%EC%9A%94%ED%95%9C-%EC%82%AC%ED%95%AD\" aria-label=\"자바 가비지 컬렉터에 대한 중요한 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바 가비지 컬렉터에 대한 중요한 사항</h1>\n<p>자바 가비지 컬렉터(Garbage Collector)는 객체들을 자동으로 수거하여 메모리 누수 방지 및 소멸된 객체들를 최적화하는 작업을 수행함으로써 JVM 메모리 관리를 용이하게 해줍니다.\n이 글에서는 자바 가비지 컬렉터의 기능, 사용 방법, 그리고 자주 발생하는 문제점과 그 대처법에 대해 간단하게 살펴볼 것입니다. 이 글은 10분 이내로 짧게 작성되었습니다.</p>\n<p>자바 가비지 컬렉터 활용에 따른 두 가지 주요 이점을 꼽을 수 있습니다. 첫 번째는 소멸된 객체들이 새로운 객체로 대체되기 때문에 메모리 누수가 발생하지 않는다는 것입니다. 두 번째로는 메모리를 최적화하여 JVM 속도를 높이는 것입니다.</p>\n<p>하지만 자바 가비지 컬렉터를 사용하면서 발생할 수 있는 문제도 있습니다. 대표적으로는 프로그램 실행 중 잠복상태(Pause)가 발생하는 것이 있습니다. 이 발생한 잠복상태는 여러 이유로 인해 발생할 수 있으며, 이를 해결하기 위해서는 가비지 컬렉터 사용 방법 및 실행 시기를 적절하게 설정해야 합니다.</p>\n<p>이를 위해 여러 가지 요소를 고려해야 합니다. 첫 번째로 연산되는 메모리의 양과 성격(Deferred, Parallel)에 따라 적절한 가비지 컬렉터를 선택하는 것이 중요합니다. 또한, 프로그램이 실행되는 환경의 종류(Physical/Virtual), 자원의 용량, 그리고 사용자 특성 등에 따라 적절한 설정값을 변경할 수 있습니다.</p>\n<p>다음으로 가장 중요한 것은 올바른 사용 방법입니다. 자바 가비지 컬렉터를 사용하기 위해서는 메모리를 이동하거나 복사하는 등의 특정한 방법이 필요합니다. 예를 들면, 메모리를 재할당하는 방법, 후에 메모리 상태를 비교하여 처리하는 방법, 그리고 사전에 준비해 둔 메모리 블록의 크기를 조정하는 방법 등이 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//메모리 배정</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">allocateMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> block <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>block_size<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//메모리 재할당</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">reallocateMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//기존 메모리 블록 삭제</span>\n  block <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//새로운 블록 할당</span>\n  block <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>new_block_size<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>마지막으로 메모리를 최적화하는 방법에 대해 말하겠습니다. 메모리 사용량에 따라 JVM 속도가 달라집니다.</p>","excerpt":"# 자바 가비지 컬렉터에 대한 중요한 사항 자바 가비지 컬렉터에 대한 중요한 사항 자바 가비지 컬렉터(Garbage Collector)는 객체들을 자동으로 수거하여 메모리 누수 방지 및 소멸된 객체들를 최적화하는 작업을 수행함으로써 JVM 메모리 관리를 용이하게 해줍니다.\n이 글에서는 자바 가비지 컬렉터의 기능, 사용 방법, 그리고 자주 발생하는 문제점과 그 대처법에 대해 간단하게 살펴볼 것입니다. 이 글은 10분 이내로 짧게 작성되었습니다. 자바 가비지 컬렉터 활용에 따른 두 가지 주요 이점을 꼽을 수 있습니다. 첫 번째는 소멸된 객체들이 새로운 객체로 대체되기 때문에 메모리 누수가 발생하지 않는다는 것입니다. 두 번째로는 메모리를 최적화하여 JVM 속도를 높이는 것입니다. 하지만 자바 가비지 컬렉터를 사용하면서 발생할 수 있는 문제도 있습니다. 대표적으로는 프로그램 실행 중 잠복상태(Pause)가 발생하는 것이 있습니다. 이 발생한 잠복상태는 여러 이유로 인해 발생할 수 있으며…","frontmatter":{"date":"April 21, 2023","title":"자바 가비지 컬렉터에 대한 중요한 사항","categories":"ALL JAVA","author":"손(Son/손민기)","emoji":"😦"},"fields":{"slug":"/2023-04-21/자바-가비지-컬렉터에-대한-중요한-사항16:55:46/"}},"next":{"id":"0c6b24b7-6f7e-5af6-8fd5-1e38ed61ec31","html":"<h1 id=\"블로그-글-제목을-입력하세요2\" style=\"position:relative;\"><a href=\"#%EB%B8%94%EB%A1%9C%EA%B7%B8-%EA%B8%80-%EC%A0%9C%EB%AA%A9%EC%9D%84-%EC%9E%85%EB%A0%A5%ED%95%98%EC%84%B8%EC%9A%942\" aria-label=\"블로그 글 제목을 입력하세요2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>블로그 글 제목을 입력하세요2:</h1>\n<p>블로그 내용 입니다~</p>","frontmatter":{"date":"April 21, 2023","title":"블로그 글 제목을 입력하세요2: ","categories":"블로그 SAMPLE","author":"손(Son/손민기)","emoji":"🔮"},"fields":{"slug":"/2023-04-21-10-53-08-블로그-글-제목을-입력하세요2:-/"}},"prev":{"id":"957a240f-f4c7-5375-b2ff-3d375c2af37b","html":"<h1 id=\"ddd-java를-활용한-아키텍처\" style=\"position:relative;\"><a href=\"#ddd-java%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98\" aria-label=\"ddd java를 활용한 아키텍처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DDD JAVA를 활용한 아키텍처</h1>\n<h2 id=\"들어가기전에\" style=\"position:relative;\"><a href=\"#%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0%EC%A0%84%EC%97%90\" aria-label=\"들어가기전에 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>들어가기전에</h2>\n<p>여러분은 이미 개발 전문가로서 자바를 사용한 아키텍처의 방법을 알고 있습니다. 하지만 요즘 소개되는 새로운 개념들을 배우고 적용해봤는지는 모르겠죠? 본 블로그는 이러한 고객을 위해 DDD JAVA를 활용한 아키텍처에 대해 최근에 발표된 내용을 다루고 있습니다.</p>\n<h2 id=\"ddd-java의-개념\" style=\"position:relative;\"><a href=\"#ddd-java%EC%9D%98-%EA%B0%9C%EB%85%90\" aria-label=\"ddd java의 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DDD JAVA의 개념</h2>\n<p>Domain Driven Design (DDD)는 불특정 문제 분야를 해결하기 위한 솔루션이라는 개념이 있습니다. 특히 초기 라이프 사이클 단계에서 개발자는 솔루션을 모델링하기 위해 다양한 도구를 사용하게 됩니다. DDD-JAVA의 개념을 소개하기 전의 개발 준비 단계는 다음과 같습니다.</p>\n<ol>\n<li>정확한 문제를 식별</li>\n<li>식별된 문제의 수준을 이해하고 잠재적 요구사항 추출</li>\n<li>해결해야할 문제의 범위를 식별 최적화</li>\n<li>DDD-JAVA 도구를 활용하여 모델링</li>\n</ol>\n<h2 id=\"ddd-java-도구\" style=\"position:relative;\"><a href=\"#ddd-java-%EB%8F%84%EA%B5%AC\" aria-label=\"ddd java 도구 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DDD JAVA 도구</h2>\n<p>DDD JAVA 도구는 풍부하고 다양한 기능 조합을 만들 수 있는 유연한 모델링 도구를 제공합니다. 개발자는 JAVA 라이브러리에서 많은 조합의 도구를 사용할 수 있습니다. JPA(Java Persistence API), JDBC (Java Database Connectivity), JUnit 등이 몇 종류의 도구로 사용됩니다.</p>\n<p>또한 이들 도구를 사용하여 스프링 기반의 객체 기반 어플리케이션, 분산 메시징 기반 어플리케이션, RESTful 웹 서비스 등 다양한 솔루션을 구현할 수 있습니다. 이러한 기능들을 함께 사용하여 복잡한 비즈니스 로직을 객체 기반으로 모델링하고 관리할 수 있습니다.</p>\n<h2 id=\"장단점\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EB%8B%A8%EC%A0%90\" aria-label=\"장단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장단점</h2>\n<p>DDD-JAVA는 스프링 기반 솔루션을 제공함으로써 모델링하기 좋고편리합니다. 또한 비즈니스 로직을 간단하고 객체 기반으로 식별, 관리하기 좋습니다. 같이 다른 라이브러리를 사용하여 객체 기반의 복잡한 로직을 간단하게 관리할 수 있기 때문에 많은 프로젝트에서 사용되고 있습니다.</p>\n<p>하지만 DDD-JAVA는 성능 개선을 위해 다른 도구나 기술의 결합이 어려울 수 있고, 어플리케이션 개발 비용이 높아질 수도 있습니다. 또한 개발자가 JAVA 라이브러리 사용 방법과 내용을 완벽하게 이해하는 것이 중요합니다.</p>\n<h2 id=\"요약\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EC%95%BD\" aria-label=\"요약 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요약</h2>\n<p>이 블로그는 DDD-JAVA를 활용한 아키텍처를 소개하는 내용입니다.</p>","frontmatter":{"date":"April 21, 2023","title":"DDD JAVA를 활용한 아키텍처","categories":"ALL JAVA 아키텍처","author":"손(Son/손민기)","emoji":"😻"},"fields":{"slug":"/2023-04-21/ddd-java를-활용한-아키텍처-17:09:45/"}},"site":{"siteMetadata":{"siteUrl":"https://smk692.github.io","comments":{"utterances":{"repo":"smk692/blog-comments"}}}}},"pageContext":{"slug":"/2023-04-21/자바-가비지-컬렉터에-대한-중요한-사항16:55:46/","nextSlug":"/2023-04-21-10-53-08-블로그-글-제목을-입력하세요2:-/","prevSlug":"/2023-04-21/ddd-java를-활용한-아키텍처-17:09:45/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}