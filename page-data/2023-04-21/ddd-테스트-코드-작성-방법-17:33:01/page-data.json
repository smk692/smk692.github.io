{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/2023-04-21/ddd-테스트-코드-작성-방법-17:33:01/",
    "result": {"data":{"cur":{"id":"787a3d10-fbb4-5b9a-824b-36eb9b10742d","html":"<h1 id=\"-ddd-테스트-코드-작성-방법\" style=\"position:relative;\"><a href=\"#-ddd-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1-%EB%B0%A9%EB%B2%95\" aria-label=\" ddd 테스트 코드 작성 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a># DDD 테스트 코드 작성 방법</h1>\n<p>DDD(Domain-Driven Design) 테스트 코드 작성은 비교적 새로운 기법이지만 소프트웨어 개발을 하는데 많은 도움이 됩니다. 개발자들은 일반적인 테스트 코드 작성과 달리 DDD 테스트 코드 작성 방법에 대해 더 신중하게 고민해야 합니다.</p>\n<h3 id=\"ddd-테스트-코드-작성-방법에-대한-정의\" style=\"position:relative;\"><a href=\"#ddd-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1-%EB%B0%A9%EB%B2%95%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A0%95%EC%9D%98\" aria-label=\"ddd 테스트 코드 작성 방법에 대한 정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DDD 테스트 코드 작성 방법에 대한 정의</h3>\n<p>DDD(Domain-Driven Design) 테스트 코드 개발은 기본 개발 과정과는 달리 개발을 위해 만들어진 도메인, 제품, 데이터모델과 같은 미리 정의된 모델을 사용합니다. 이는 개발 시에 점진적인 개발이 가능하게 해줍니다. 기본적으로 DDD 테스트 코드 작성 방법과는 다르게 개발에 대하여 다양한 요구사항과 의사 결정이 먼저 들어가게 됩니다.</p>\n<h3 id=\"ddd-테스트-코드-작성의-장단점\" style=\"position:relative;\"><a href=\"#ddd-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1%EC%9D%98-%EC%9E%A5%EB%8B%A8%EC%A0%90\" aria-label=\"ddd 테스트 코드 작성의 장단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DDD 테스트 코드 작성의 장단점</h3>\n<p>DDD 테스트 코드 작성 방법은 기존의 개발 방법과 차이가 있지만 관련된 장단점이 있습니다.</p>\n<p><em>장점</em></p>\n<ul>\n<li>다른 시스템과 연동하기 쉽다.</li>\n<li>빠른 시간 안에 기능을 추가할 수 있다.</li>\n<li>개발 시간이 절약된다.</li>\n</ul>\n<p><em>단점</em></p>\n<ul>\n<li>개발에 관한 의사결정이 많다.</li>\n<li>도메인에 대한 이해가 필요하다.</li>\n<li>기능 구현에 관한 정확한 사항을 고려해야한다.</li>\n</ul>\n<h3 id=\"ddd-테스트-코드-작성을-위해-필요한-개발-기술\" style=\"position:relative;\"><a href=\"#ddd-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1%EC%9D%84-%EC%9C%84%ED%95%B4-%ED%95%84%EC%9A%94%ED%95%9C-%EA%B0%9C%EB%B0%9C-%EA%B8%B0%EC%88%A0\" aria-label=\"ddd 테스트 코드 작성을 위해 필요한 개발 기술 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DDD 테스트 코드 작성을 위해 필요한 개발 기술</h3>\n<p>DDD 테스트 코드 작성을 위하여 개발자는 다음과 같은 기술과 지식을 익혀야합니다.</p>\n<ul>\n<li>TDD(Test-driven Development): 결과에 따라 테스트를 기반으로 개발을 진행하는 기법</li>\n<li>BDD(Behavior-driven Development): 결과에 따라 테스트를 주도하는 기법</li>\n<li>Domain Driven Design: 도메인에 관해 먼저 고려하는 기법</li>\n<li>IntelliJ IDEA: 인텔리제이 사용법</li>\n</ul>\n<h3 id=\"예제-코드\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%BD%94%EB%93%9C\" aria-label=\"예제 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 코드</h3>\n<p>이번에는 예제 코드를 작성해보겠습니다. 이 예제 코드는 DDD 테스트 코드 작성이라는 개발 기법을 사용하여 점진적으로 개발하는 방법을 소개합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">describe 'CartService' do\n  context 'when adding an item to the cart' do\n    Given(:cart_service) { CartService.new }\n    When(:result) { cart_service.add_item('Book', 2) }\n    Then { result == true }\n  end\n\n  context 'when removing an item from the cart' do\n    Given(:cart_service) { CartService.new }\n    When(:result) { cart_service.remove_item('Book', 1) }\n    Then { result == true }\n  end\nend</code></pre></div>\n<h3 id=\"요약\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EC%95%BD\" aria-label=\"요약 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요약</h3>\n<p>현재 많은 개발을 진행하는 경우 DDD 테스트 코드 작성 방법을 사용합니다. 이는 개발하는 데 도움이 됩니다. 다만 도메인에 대한 이해, TDD, BDD, IntelliJ IDEA 등 개발 기술의 지식이 필요합니다. 마지막으로 이번</p>","excerpt":"# DDD 테스트 코드 작성 방법 DDD(Domain-Driven Design) 테스트 코드 작성은 비교적 새로운 기법이지만 소프트웨어 개발을 하는데 많은 도움이 됩니다. 개발자들은 일반적인 테스트 코드 작성과 달리 DDD 테스트 코드 작성 방법에 대해 더 신중하게 고민해야 합니다. DDD 테스트 코드 작성 방법에 대한 정의 DDD(Domain-Driven Design) 테스트 코드 개발은 기본 개발 과정과는 달리 개발을 위해 만들어진 도메인, 제품, 데이터모델과 같은 미리 정의된 모델을 사용합니다. 이는 개발 시에 점진적인 개발이 가능하게 해줍니다. 기본적으로 DDD 테스트 코드 작성 방법과는 다르게 개발에 대하여 다양한 요구사항과 의사 결정이 먼저 들어가게 됩니다. DDD 테스트 코드 작성의 장단점 DDD 테스트 코드 작성 방법은 기존의 개발 방법과 차이가 있지만 관련된 장단점이 있습니다. 장점 다른 시스템과 연동하기 쉽다. 빠른 시간 안에 기능을 추가할 수 있다. 개발 시간이…","frontmatter":{"date":"April 21, 2023","title":"DDD 테스트 코드 작성 방법 ","categories":"JAVA","author":"손(Son/손민기)","emoji":"😷"},"fields":{"slug":"/2023-04-21/ddd-테스트-코드-작성-방법-17:33:01/"}},"next":{"id":"957a240f-f4c7-5375-b2ff-3d375c2af37b","html":"<h1 id=\"ddd-java를-활용한-아키텍처\" style=\"position:relative;\"><a href=\"#ddd-java%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98\" aria-label=\"ddd java를 활용한 아키텍처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DDD JAVA를 활용한 아키텍처</h1>\n<h2 id=\"들어가기전에\" style=\"position:relative;\"><a href=\"#%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0%EC%A0%84%EC%97%90\" aria-label=\"들어가기전에 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>들어가기전에</h2>\n<p>여러분은 이미 개발 전문가로서 자바를 사용한 아키텍처의 방법을 알고 있습니다. 하지만 요즘 소개되는 새로운 개념들을 배우고 적용해봤는지는 모르겠죠? 본 블로그는 이러한 고객을 위해 DDD JAVA를 활용한 아키텍처에 대해 최근에 발표된 내용을 다루고 있습니다.</p>\n<h2 id=\"ddd-java의-개념\" style=\"position:relative;\"><a href=\"#ddd-java%EC%9D%98-%EA%B0%9C%EB%85%90\" aria-label=\"ddd java의 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DDD JAVA의 개념</h2>\n<p>Domain Driven Design (DDD)는 불특정 문제 분야를 해결하기 위한 솔루션이라는 개념이 있습니다. 특히 초기 라이프 사이클 단계에서 개발자는 솔루션을 모델링하기 위해 다양한 도구를 사용하게 됩니다. DDD-JAVA의 개념을 소개하기 전의 개발 준비 단계는 다음과 같습니다.</p>\n<ol>\n<li>정확한 문제를 식별</li>\n<li>식별된 문제의 수준을 이해하고 잠재적 요구사항 추출</li>\n<li>해결해야할 문제의 범위를 식별 최적화</li>\n<li>DDD-JAVA 도구를 활용하여 모델링</li>\n</ol>\n<h2 id=\"ddd-java-도구\" style=\"position:relative;\"><a href=\"#ddd-java-%EB%8F%84%EA%B5%AC\" aria-label=\"ddd java 도구 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DDD JAVA 도구</h2>\n<p>DDD JAVA 도구는 풍부하고 다양한 기능 조합을 만들 수 있는 유연한 모델링 도구를 제공합니다. 개발자는 JAVA 라이브러리에서 많은 조합의 도구를 사용할 수 있습니다. JPA(Java Persistence API), JDBC (Java Database Connectivity), JUnit 등이 몇 종류의 도구로 사용됩니다.</p>\n<p>또한 이들 도구를 사용하여 스프링 기반의 객체 기반 어플리케이션, 분산 메시징 기반 어플리케이션, RESTful 웹 서비스 등 다양한 솔루션을 구현할 수 있습니다. 이러한 기능들을 함께 사용하여 복잡한 비즈니스 로직을 객체 기반으로 모델링하고 관리할 수 있습니다.</p>\n<h2 id=\"장단점\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EB%8B%A8%EC%A0%90\" aria-label=\"장단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장단점</h2>\n<p>DDD-JAVA는 스프링 기반 솔루션을 제공함으로써 모델링하기 좋고편리합니다. 또한 비즈니스 로직을 간단하고 객체 기반으로 식별, 관리하기 좋습니다. 같이 다른 라이브러리를 사용하여 객체 기반의 복잡한 로직을 간단하게 관리할 수 있기 때문에 많은 프로젝트에서 사용되고 있습니다.</p>\n<p>하지만 DDD-JAVA는 성능 개선을 위해 다른 도구나 기술의 결합이 어려울 수 있고, 어플리케이션 개발 비용이 높아질 수도 있습니다. 또한 개발자가 JAVA 라이브러리 사용 방법과 내용을 완벽하게 이해하는 것이 중요합니다.</p>\n<h2 id=\"요약\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EC%95%BD\" aria-label=\"요약 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요약</h2>\n<p>이 블로그는 DDD-JAVA를 활용한 아키텍처를 소개하는 내용입니다.</p>","frontmatter":{"date":"April 21, 2023","title":"DDD JAVA를 활용한 아키텍처","categories":"JAVA 아키텍처","author":"손(Son/손민기)","emoji":"😻"},"fields":{"slug":"/2023-04-21/ddd-java를-활용한-아키텍처-17:09:45/"}},"prev":{"id":"93079aa7-af72-5934-8c80-d87da91cbf72","html":"<h1 id=\"subheadings-and-subtopics\" style=\"position:relative;\"><a href=\"#subheadings-and-subtopics\" aria-label=\"subheadings and subtopics permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Subheadings and Subtopics</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">##1. Introduction to Event Architecture\n##2. Benefits of Event Architecture\n##3. Challenges of Event Architecture\n##4. Best Practices for Event Architecture\n##5. Conclusion\n\n</code></pre></div>","frontmatter":{"date":"April 21, 2023","title":"Subheadings and Subtopics","categories":"아키텍처","author":"손(Son/손민기)","emoji":"😴"},"fields":{"slug":"/2023-04-21/subheadings-and-subtopics17:53:10/"}},"site":{"siteMetadata":{"siteUrl":"https://smk692.github.io","comments":{"utterances":{"repo":"smk692/blog-comments"}}}}},"pageContext":{"slug":"/2023-04-21/ddd-테스트-코드-작성-방법-17:33:01/","nextSlug":"/2023-04-21/ddd-java를-활용한-아키텍처-17:09:45/","prevSlug":"/2023-04-21/subheadings-and-subtopics17:53:10/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}