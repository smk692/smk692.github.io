{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/2023-04-22/kafka-aws-msk-내용-및-사용-사례15:17:20/",
    "result": {"data":{"cur":{"id":"5af3a45a-9d5e-5aff-91ae-50e19eb4a1a3","html":"<h2 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h2>\n<p>**Amazon Managed Streaming for Apache Kafka (Amazon MSK)**은 <strong>Apache Kafka</strong>를 관리하기 위한 <strong>AWS</strong>의 완전 관리형 서비스입니다. Amazon MSK는 <strong>Apache Kafka</strong>를 사용하여 데이터 스트리밍 솔루션을 구축하고 운영하는 데 필요한 모든 기능을 제공합니다. Amazon MSK는 사용자가 직접 관리하거나 운영할 필요가 없으며, 사용자는 응용 프로그램을 실행하고 데이터를 스트리밍하는 데 집중할 수 있습니다.</p>\n<h2 id=\"장점\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EC%A0%90\" aria-label=\"장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장점</h2>\n<ul>\n<li><strong>자동화된 관리</strong>: Amazon MSK는 사용자가 직접 관리하거나 운영할 필요가 없으며, 사용자는 응용 프로그램을 실행하고 데이터를 스트리밍하는 데 집중할 수 있습니다.</li>\n<li><strong>안정적인 성능</strong>: Amazon MSK는 사용자가 응용 프로그램을 실행하고 데이터를 스트리밍하는 데 필요한 안정적인 성능을 제공합니다.</li>\n<li><strong>간편한 사용</strong>: Amazon MSK는 사용자가 응용 프로그램을 실행하고 데이터를 스트리밍하는 데 필요한 간편한 사용을 제공합니다.</li>\n</ul>\n<h2 id=\"단점\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%A0%90\" aria-label=\"단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점</h2>\n<ul>\n<li><strong>고가의 비용</strong>: Amazon MSK는 사용자가 응용 프로그램을 실행하고 데이터를 스트리밍하는 데 필요한 비용이 높습니다.</li>\n<li><strong>고도의 전문지식</strong>: Amazon MSK는 사용자가 응용 프로그램을 실행하고 데이터를 스트리밍하는 데 필요한 고도의 전문지식이 필요합니다.</li>\n</ul>\n<h2 id=\"사용-사례\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9-%EC%82%AC%EB%A1%80\" aria-label=\"사용 사례 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용 사례</h2>\n<p>Amazon MSK는 다양한 사용 사례에 사용됩니다. 예를 들어, 다음과 같은 사용 사례가 있습니다.</p>\n<ul>\n<li><strong>데이터 스트리밍</strong>: Amazon MSK는 데이터 스트리밍 솔루션을 구축하고 운영하는 데 사용됩니다.</li>\n<li><strong>데이터 분석</strong>: Amazon MSK는 데이터 분석 솔루션을 구축하고 운영하는 데 사용됩니다.</li>\n<li><strong>데이터 저장</strong>: Amazon MSK는 데이터 저장 솔루션을 구축하고 운영하는 데 사용됩니다.</li>\n</ul>\n<h2 id=\"java-샘플-코드\" style=\"position:relative;\"><a href=\"#java-%EC%83%98%ED%94%8C-%EC%BD%94%EB%93%9C\" aria-label=\"java 샘플 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Java 샘플 코드</h2>\n<p>다음은 Amazon MSK를 사용하는 Java 샘플 코드입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">software<span class=\"token punctuation\">.</span>amazon<span class=\"token punctuation\">.</span>awssdk<span class=\"token punctuation\">.</span>services<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CreateClusterRequest</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">software<span class=\"token punctuation\">.</span>amazon<span class=\"token punctuation\">.</span>awssdk<span class=\"token punctuation\">.</span>services<span class=\"token punctuation\">.</span>kafka<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CreateClusterResponse</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CreateCluster</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">CreateClusterRequest</span> request <span class=\"token operator\">=</span> <span class=\"token class-name\">CreateClusterRequest</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">clusterName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"my-cluster\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">CreateClusterResponse</span> response <span class=\"token operator\">=</span> kafkaClient<span class=\"token punctuation\">.</span><span class=\"token function\">createCluster</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">clusterArn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"코드-결과\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C-%EA%B2%B0%EA%B3%BC\" aria-label=\"코드 결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드 결과</h2>\n<p>위의 코드를 실행하면 다음과 같은 결과가 출력됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">arn:aws:kafka:us-east-1:123456789012:cluster/my-cluster</code></pre></div>\n<h1 id=\"해시태그\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EC%8B%9C%ED%83%9C%EA%B7%B8\" aria-label=\"해시태그 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해시태그</h1>\n<p>#Kafka, #AWS, #MSK, #ApacheKafka, #AmazonMSK, #DataStreaming, #DataAnalysis, #DataStorage, #Java, #SampleCode, #CodeResult, #AutomatedManagement, #StablePerformance, #EasyToUse, #HighCost, #HighExpertise, #UseCases, #CreateCluster, #ClusterName, #ClusterARN, #ITExpert, #MarkdownFormat, #Highlights, #Bolds, #Italics, #Subheadings, #Advantages, #Disadvantages, #ApplicationExamples, #JavaSampleCode, #CodeResults, #SEOOptimized, #TargetAudience, #HumanLike, #InsertImages, #PreviousConversation</p>","excerpt":"개요 **Amazon Managed Streaming for Apache Kafka (Amazon MSK)**은 Apache Kafka를 관리하기 위한 AWS의 완전 관리형 서비스입니다. Amazon MSK는 Apache Kafka를 사용하여 데이터 스트리밍 솔루션을 구축하고 운영하는 데 필요한 모든 기능을 제공합니다. Amazon MSK는 사용자가 직접 관리하거나 운영할 필요가 없으며, 사용자는 응용 프로그램을 실행하고 데이터를 스트리밍하는 데 집중할 수 있습니다. 장점 자동화된 관리: Amazon MSK는 사용자가 직접 관리하거나 운영할 필요가 없으며, 사용자는 응용 프로그램을 실행하고 데이터를 스트리밍하는 데 집중할 수 있습니다. 안정적인 성능: Amazon MSK는 사용자가 응용 프로그램을 실행하고 데이터를 스트리밍하는 데 필요한 안정적인 성능을 제공합니다. 간편한 사용: Amazon MSK는 사용자가 응용 프로그램을 실행하고 데이터를 스트리밍하는 데 필요한 간편한 사용을 …","frontmatter":{"date":"April 22, 2023","title":"Kafka AWS MSK 내용 및 사용 사례","categories":"KAFKA","author":"손(Son/손민기)","emoji":"🙋"},"fields":{"slug":"/2023-04-22/kafka-aws-msk-내용-및-사용-사례15:17:20/"}},"next":{"id":"bcb0ddd3-4432-5bb0-ba51-be9e1f9f81af","html":"<h1 id=\"-자바-가비지-컬렉터에-대한-중요한-사항\" style=\"position:relative;\"><a href=\"#-%EC%9E%90%EB%B0%94-%EA%B0%80%EB%B9%84%EC%A7%80-%EC%BB%AC%EB%A0%89%ED%84%B0%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A4%91%EC%9A%94%ED%95%9C-%EC%82%AC%ED%95%AD\" aria-label=\" 자바 가비지 컬렉터에 대한 중요한 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a># 자바 가비지 컬렉터에 대한 중요한 사항</h1>\n<h1 id=\"자바-가비지-컬렉터에-대한-중요한-사항\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94-%EA%B0%80%EB%B9%84%EC%A7%80-%EC%BB%AC%EB%A0%89%ED%84%B0%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A4%91%EC%9A%94%ED%95%9C-%EC%82%AC%ED%95%AD\" aria-label=\"자바 가비지 컬렉터에 대한 중요한 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바 가비지 컬렉터에 대한 중요한 사항</h1>\n<p>자바 가비지 컬렉터(Garbage Collector)는 객체들을 자동으로 수거하여 메모리 누수 방지 및 소멸된 객체들를 최적화하는 작업을 수행함으로써 JVM 메모리 관리를 용이하게 해줍니다.\n이 글에서는 자바 가비지 컬렉터의 기능, 사용 방법, 그리고 자주 발생하는 문제점과 그 대처법에 대해 간단하게 살펴볼 것입니다. 이 글은 10분 이내로 짧게 작성되었습니다.</p>\n<p>자바 가비지 컬렉터 활용에 따른 두 가지 주요 이점을 꼽을 수 있습니다. 첫 번째는 소멸된 객체들이 새로운 객체로 대체되기 때문에 메모리 누수가 발생하지 않는다는 것입니다. 두 번째로는 메모리를 최적화하여 JVM 속도를 높이는 것입니다.</p>\n<p>하지만 자바 가비지 컬렉터를 사용하면서 발생할 수 있는 문제도 있습니다. 대표적으로는 프로그램 실행 중 잠복상태(Pause)가 발생하는 것이 있습니다. 이 발생한 잠복상태는 여러 이유로 인해 발생할 수 있으며, 이를 해결하기 위해서는 가비지 컬렉터 사용 방법 및 실행 시기를 적절하게 설정해야 합니다.</p>\n<p>이를 위해 여러 가지 요소를 고려해야 합니다. 첫 번째로 연산되는 메모리의 양과 성격(Deferred, Parallel)에 따라 적절한 가비지 컬렉터를 선택하는 것이 중요합니다. 또한, 프로그램이 실행되는 환경의 종류(Physical/Virtual), 자원의 용량, 그리고 사용자 특성 등에 따라 적절한 설정값을 변경할 수 있습니다.</p>\n<p>다음으로 가장 중요한 것은 올바른 사용 방법입니다. 자바 가비지 컬렉터를 사용하기 위해서는 메모리를 이동하거나 복사하는 등의 특정한 방법이 필요합니다. 예를 들면, 메모리를 재할당하는 방법, 후에 메모리 상태를 비교하여 처리하는 방법, 그리고 사전에 준비해 둔 메모리 블록의 크기를 조정하는 방법 등이 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//메모리 배정</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">allocateMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> block <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>block_size<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//메모리 재할당</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">reallocateMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//기존 메모리 블록 삭제</span>\n  block <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//새로운 블록 할당</span>\n  block <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>new_block_size<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>마지막으로 메모리를 최적화하는 방법에 대해 말하겠습니다. 메모리 사용량에 따라 JVM 속도가 달라집니다.</p>","frontmatter":{"date":"April 21, 2023","title":"자바 가비지 컬렉터에 대한 중요한 사항","categories":"JAVA","author":"손(Son/손민기)","emoji":"😦"},"fields":{"slug":"/2023-04-21/자바-가비지-컬렉터에-대한-중요한-사항16:55:46/"}},"prev":{"id":"216ac529-ae14-5bff-9d1d-3dde55ac98f4","html":"<p><img src=\"confluent%20kafka%20%EB%82%B4%EC%9A%A9%20%EB%B0%8F%20%EC%82%AC%EC%9A%A9%20%EC%82%AC%EB%A1%80.png\" alt=\"main_picture\">\nConfluent Kafka는 다음과 같은 장점을 가지고 있습니다.</p>\n<ul>\n<li>빠른 속도: Confluent Kafka는 빠른 속도로 메시징을 제공합니다. 메시징 솔루션을 사용하는 경우 빠른 속도는 중요한 요소입니다.</li>\n<li>안정적인 데이터 스트리밍: Confluent Kafka는 데이터 스트리밍을 안정적으로 제공합니다. 데이터 스트리밍을 사용하는 경우 안정적인 솔루션이 필요합니다.</li>\n<li>다양한 데이터 처리: Confluent Kafka는 다양한 종류의 데이터를 처리하기 위해 사용됩니다. 다양한 종류의 데이터를 처리하기 위해 메시징 시스템이 필요합니다.</li>\n</ul>\n<h2 id=\"confluent-kafka의-사용-사례\" style=\"position:relative;\"><a href=\"#confluent-kafka%EC%9D%98-%EC%82%AC%EC%9A%A9-%EC%82%AC%EB%A1%80\" aria-label=\"confluent kafka의 사용 사례 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Confluent Kafka의 사용 사례</h2>\n<p>Confluent Kafka는 다음과 같은 사용 사례가 있습니다.</p>\n<ul>\n<li>데이터 스트리밍: Confluent Kafka는 데이터 스트리밍을 위해 사용됩니다. 데이터 스트리밍을 위해 빠르고 안정적인 메시징 솔루션이 필요합니다.</li>\n<li>분산 메시징 시스템: Confluent Kafka는 다양한 종류의 데이터를 처리하기 위해 분산 메시징 시스템으로 사용됩니다.</li>\n<li>데이터 인텔리전스: Confluent Kafka는 데이터 인텔리전스를 위해 사용됩니다. 데이터 인텔리전스를 위해 메시징 솔루션이 필요합니다.</li>\n</ul>\n<h2 id=\"java-샘플-코드\" style=\"position:relative;\"><a href=\"#java-%EC%83%98%ED%94%8C-%EC%BD%94%EB%93%9C\" aria-label=\"java 샘플 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Java 샘플 코드</h2>\n<p>Confluent Kafka를 사용하기 위해 Java 샘플 코드를 작성할 수 있습니다. 다음은 Java 샘플 코드입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyKafkaProducer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Properties</span> props <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        props<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bootstrap.servers\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"localhost:9092\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        props<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key.serializer\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"org.apache.kafka.common.serialization.StringSerializer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        props<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value.serializer\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"org.apache.kafka.common.serialization.StringSerializer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Producer</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> producer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">KafkaProducer</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            producer<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ProducerRecord</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"my-topic\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        producer<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"코드-결과\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C-%EA%B2%B0%EA%B3%BC\" aria-label=\"코드 결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드 결과</h2>\n<p>Java 샘플 코드를 실행하면 다음과 같은 결과를 얻을 수 있습니다.</p>\n<ul>\n<li>메시징 솔루션이 정상적으로 작동합니다.</li>\n<li>메시징 솔루션이 정상적으로 데이터를 스트리밍합니다.</li>\n<li>메시징 솔루션이 다양한 종류의 데이터를 처리합니다.</li>\n</ul>\n<h2 id=\"해시태그\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EC%8B%9C%ED%83%9C%EA%B7%B8\" aria-label=\"해시태그 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해시태그</h2>\n<p>#ConfluentKafka, #ApacheKafka, #DataStreaming, #DistributedMessagingSystem, #DataIntelligence, #MessagingSolution, #JavaSampleCode, #KafkaProducer, #MyTopic, #StringSerializer, #KafkaCommonSerialization, #DataProcessing, #FastMessaging, #StableDataStreaming, #DataAnalytics, #RealTimeDataProcessing, #DataIntegration, #DataManagement, #BigData, #DataStorage, #DataMining, #DataVisualization, #DataScience, #DataEngineering, #DataArchitecture, #DataGovernance, #DataSecurity, #DataAnalyticsTools</p>","frontmatter":{"date":"April 23, 2023","title":"confluent kafka 내용 및 사용 사례","categories":"KAFKA","author":"손(Son/손민기)","emoji":"😋"},"fields":{"slug":"/2023-04-23/confluent-kafka-내용-및-사용-사례10:45:25/"}},"site":{"siteMetadata":{"siteUrl":"https://smk692.github.io","comments":{"utterances":{"repo":"smk692/blog-comments"}}}}},"pageContext":{"slug":"/2023-04-22/kafka-aws-msk-내용-및-사용-사례15:17:20/","nextSlug":"/2023-04-21/자바-가비지-컬렉터에-대한-중요한-사항16:55:46/","prevSlug":"/2023-04-23/confluent-kafka-내용-및-사용-사례10:45:25/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}