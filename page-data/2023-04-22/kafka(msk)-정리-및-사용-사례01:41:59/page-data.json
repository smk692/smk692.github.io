{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/2023-04-22/kafka(msk)-정리-및-사용-사례01:41:59/",
    "result": {"data":{"cur":{"id":"02250636-1440-50b6-a24e-3d348e3d511c","html":"<h1 id=\"kafkamsk-정리-및-사용-사례\" style=\"position:relative;\"><a href=\"#kafkamsk-%EC%A0%95%EB%A6%AC-%EB%B0%8F-%EC%82%AC%EC%9A%A9-%EC%82%AC%EB%A1%80\" aria-label=\"kafkamsk 정리 및 사용 사례 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Kafka(MSK) 정리 및 사용 사례</h1>\n<h2 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔎</h2>","excerpt":"Kafka(MSK) 정리 및 사용 사례 🔎","frontmatter":{"date":"April 22, 2023","title":"Kafka(MSK) 정리 및 사용 사례","categories":"테스트","author":"손(Son/손민기)","emoji":"😯"},"fields":{"slug":"/2023-04-22/kafka(msk)-정리-및-사용-사례01:41:59/"}},"next":{"id":"16ff6381-a3d2-5f47-9252-71454b0e0f2d","html":"<h1 id=\"-ddd-테스트-코드-작성-방법\" style=\"position:relative;\"><a href=\"#-ddd-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1-%EB%B0%A9%EB%B2%95\" aria-label=\" ddd 테스트 코드 작성 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a># DDD 테스트 코드 작성 방법</h1>\n<p>DDD(Domain-Driven Design) 테스트 코드 작성은 비교적 새로운 기법이지만 소프트웨어 개발을 하는데 많은 도움이 됩니다. 개발자들은 일반적인 테스트 코드 작성과 달리 DDD 테스트 코드 작성 방법에 대해 더 신중하게 고민해야 합니다.</p>\n<h3 id=\"ddd-테스트-코드-작성-방법에-대한-정의\" style=\"position:relative;\"><a href=\"#ddd-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1-%EB%B0%A9%EB%B2%95%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A0%95%EC%9D%98\" aria-label=\"ddd 테스트 코드 작성 방법에 대한 정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DDD 테스트 코드 작성 방법에 대한 정의</h3>\n<p>DDD(Domain-Driven Design) 테스트 코드 개발은 기본 개발 과정과는 달리 개발을 위해 만들어진 도메인, 제품, 데이터모델과 같은 미리 정의된 모델을 사용합니다. 이는 개발 시에 점진적인 개발이 가능하게 해줍니다. 기본적으로 DDD 테스트 코드 작성 방법과는 다르게 개발에 대하여 다양한 요구사항과 의사 결정이 먼저 들어가게 됩니다.</p>\n<h3 id=\"ddd-테스트-코드-작성의-장단점\" style=\"position:relative;\"><a href=\"#ddd-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1%EC%9D%98-%EC%9E%A5%EB%8B%A8%EC%A0%90\" aria-label=\"ddd 테스트 코드 작성의 장단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DDD 테스트 코드 작성의 장단점</h3>\n<p>DDD 테스트 코드 작성 방법은 기존의 개발 방법과 차이가 있지만 관련된 장단점이 있습니다.</p>\n<p><em>장점</em></p>\n<ul>\n<li>다른 시스템과 연동하기 쉽다.</li>\n<li>빠른 시간 안에 기능을 추가할 수 있다.</li>\n<li>개발 시간이 절약된다.</li>\n</ul>\n<p><em>단점</em></p>\n<ul>\n<li>개발에 관한 의사결정이 많다.</li>\n<li>도메인에 대한 이해가 필요하다.</li>\n<li>기능 구현에 관한 정확한 사항을 고려해야한다.</li>\n</ul>\n<h3 id=\"ddd-테스트-코드-작성을-위해-필요한-개발-기술\" style=\"position:relative;\"><a href=\"#ddd-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1%EC%9D%84-%EC%9C%84%ED%95%B4-%ED%95%84%EC%9A%94%ED%95%9C-%EA%B0%9C%EB%B0%9C-%EA%B8%B0%EC%88%A0\" aria-label=\"ddd 테스트 코드 작성을 위해 필요한 개발 기술 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DDD 테스트 코드 작성을 위해 필요한 개발 기술</h3>\n<p>DDD 테스트 코드 작성을 위하여 개발자는 다음과 같은 기술과 지식을 익혀야합니다.</p>\n<ul>\n<li>TDD(Test-driven Development): 결과에 따라 테스트를 기반으로 개발을 진행하는 기법</li>\n<li>BDD(Behavior-driven Development): 결과에 따라 테스트를 주도하는 기법</li>\n<li>Domain Driven Design: 도메인에 관해 먼저 고려하는 기법</li>\n<li>IntelliJ IDEA: 인텔리제이 사용법</li>\n</ul>\n<h3 id=\"예제-코드\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%BD%94%EB%93%9C\" aria-label=\"예제 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 코드</h3>\n<p>이번에는 예제 코드를 작성해보겠습니다. 이 예제 코드는 DDD 테스트 코드 작성이라는 개발 기법을 사용하여 점진적으로 개발하는 방법을 소개합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">describe 'CartService' do\n  context 'when adding an item to the cart' do\n    Given(:cart_service) { CartService.new }\n    When(:result) { cart_service.add_item('Book', 2) }\n    Then { result == true }\n  end\n\n  context 'when removing an item from the cart' do\n    Given(:cart_service) { CartService.new }\n    When(:result) { cart_service.remove_item('Book', 1) }\n    Then { result == true }\n  end\nend</code></pre></div>\n<h3 id=\"요약\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EC%95%BD\" aria-label=\"요약 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요약</h3>\n<p>현재 많은 개발을 진행하는 경우 DDD 테스트 코드 작성 방법을 사용합니다. 이는 개발하는 데 도움이 됩니다. 다만 도메인에 대한 이해, TDD, BDD, IntelliJ IDEA 등 개발 기술의 지식이 필요합니다. 마지막으로 이번</p>","frontmatter":{"date":"April 21, 2023","title":"DDD 테스트 코드 작성 방법 ","categories":"JAVA","author":"손(Son/손민기)","emoji":"😷"},"fields":{"slug":"/2023-04-21/ddd-테스트-코드-작성-방법-17:33:01/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://smk692.github.io","comments":{"utterances":{"repo":"smk692/blog-comments"}}}}},"pageContext":{"slug":"/2023-04-22/kafka(msk)-정리-및-사용-사례01:41:59/","nextSlug":"/2023-04-21/ddd-테스트-코드-작성-방법-17:33:01/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}