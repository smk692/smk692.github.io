{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/아키텍처",
    "result": {"pageContext":{"currentCategory":"아키텍처","categories":["All","아키텍처","JAVA","featured","블로그"],"edges":[{"node":{"id":"93079aa7-af72-5934-8c80-d87da91cbf72","excerpt":"Subheadings and Subtopics","fields":{"slug":"/2023-04-21/subheadings-and-subtopics17:53:10/"},"frontmatter":{"categories":"아키텍처","title":"Subheadings and Subtopics","date":"April 21, 2023"}},"next":{"fields":{"slug":"/2023-04-21/ddd-테스트-코드-작성-방법-17:33:01/"}},"previous":null},{"node":{"id":"957a240f-f4c7-5375-b2ff-3d375c2af37b","excerpt":"DDD JAVA를 활용한 아키텍처 들어가기전에 여러분은 이미 개발 전문가로서 자바를 사용한 아키텍처의 방법을 알고 있습니다. 하지만 요즘 소개되는 새로운 개념들을 배우고 적용해봤는지는 모르겠죠? 본 블로그는 이러한 고객을 위해 DDD JAVA를 활용한 아키텍처에 대해 최근에 발표된 내용을 다루고 있습니다. DDD JAVA의 개념 Domain Driven Design (DDD)는 불특정 문제 분야를 해결하기 위한 솔루션이라는 개념이 있습니다. 특히 초기 라이프 사이클 단계에서 개발자는 솔루션을 모델링하기 위해 다양한 도구를 사용하게 됩니다. DDD-JAVA의 개념을 소개하기 전의 개발 준비 단계는 다음과 같습니다. 정확한 문제를 식별 식별된 문제의 수준을 이해하고 잠재적 요구사항 추출 해결해야할 문제의 범위를 식별 최적화 DDD-JAVA 도구를 활용하여 모델링 DDD JAVA 도구 DDD JAVA 도구는 풍부하고 다양한 기능 조합을 만들 수 있는 유연한 모델링 도구를 제공합니다. 개…","fields":{"slug":"/2023-04-21/ddd-java를-활용한-아키텍처-17:09:45/"},"frontmatter":{"categories":"JAVA 아키텍처","title":"DDD JAVA를 활용한 아키텍처","date":"April 21, 2023"}},"next":{"fields":{"slug":"/2023-04-21/자바-가비지-컬렉터에-대한-중요한-사항16:55:46/"}},"previous":{"fields":{"slug":"/2023-04-21/ddd-테스트-코드-작성-방법-17:33:01/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}