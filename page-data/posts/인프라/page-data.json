{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/인프라",
    "result": {"pageContext":{"currentCategory":"인프라","categories":["All","인프라","CS","terraform","자동화","블로그","featured","kafka","java"],"edges":[{"node":{"id":"b35d3736-f50f-5609-8bc8-de677881cf32","excerpt":"🔖 서론 만드는법은 이전글을 참고 해주세요. 이번에는 간단하게 쿠버네티스 실습 하려고합니다. https://github.com/smk692/kubernetes-summarize 코드는 위의 링크에 있으며 간단한 실습 내용이라 안되는 부분은 댓글로 부탁드리겠습니다. 🖋️ 실습 GCP Kubernetes Engine Pod 생성 및 수정 시작 전 테스트  명령어 시 에러가 날 경우 이전 블로그 글을 확인해주세요. 1. git clone 을 진행해주세요. 준비물: deployment.yaml 2. 디렉토리 위치 변경 3. pod 생성  GCP Kubernetes Engine 잘 생성된걸 확인 할 수 있습니다.  스크린샷과 같이 뜨면 Pod 생성이 완료! 4. pod 변경 위에서 확인한 Name 으로 변경을 진행합니다.  저장 시  수정이되었다고 호출됩니다.  스크린샷과 같이 뜨면 Pod 변경이 완료! 5. pod 삭제 yaml 에서 이미 replicas 지정했기 때문에 삭제되어도 새로운 …","fields":{"slug":"/infra/gcp-kubernetes-2/content/"},"frontmatter":{"categories":"인프라","title":"☸️ Kubernetes 배포가 Google Cloud Platform에서 쉬움 모드 Step2 : 초보자를 위한 단계별 실습","date":"April 30, 2023"}},"next":{"fields":{"slug":"/infra/gcp-kubernetes-1/content/"}},"previous":null},{"node":{"id":"ff641d6c-08c5-5d45-a7fb-0260e9b5c0ec","excerpt":"GCP Kubernetes 생성하기 (무료 Creatdit 사용) 1. Google.com 에서 GCP 라고 입력 후 검색 후 무료 등록을 클릭한다.  2. 무료로 시작 하기 클릭.  3. 결제 정보를 입력해주세요. 만약 입력하지 않을 경우 서비스 사용이 제한됩니다.  4. 입력 완료 후 왼쪽 상단의 메뉴바 클릭 하면 아래와 같은 스크린샷이 나옵니다.  5. 클러스터 생성 클릭 하면 아래와 같은 화면이 나옵니다.  6. 일단 Default 로 만들기 때문에 쭉쭉 다음을 눌러주세요.  7. 약 7분 ~ 10분 정도 소요된 후 생성이 완료됩니다.  Local Kubernetes 설치 하는 법 https://kubernetes.io/ko/docs/tasks/tools/install-kubectl-macos/ GCP Kubernetes Local 연동 하는법 https://cloud.google.com/sdk/docs/install?hl=ko Mac GCP CLI를 설치하는 법 GCP C…","fields":{"slug":"/infra/gcp-kubernetes-1/content/"},"frontmatter":{"categories":"인프라","title":"☸️ Kubernetes 배포가 Google Cloud Platform에서 쉬움 모드 Step1 : 초보자를 위한 단계별 가이드","date":"April 29, 2023"}},"next":{"fields":{"slug":"/CS/backend-interview2/"}},"previous":{"fields":{"slug":"/infra/gcp-kubernetes-2/content/"}}},{"node":{"id":"477baeb0-8398-5f44-8c02-bdbd09dd1172","excerpt":"📒 테라폼(Terraform) 이란? 테라폼(Terraform)은 인프라스트럭처를 코드로 관리하기 위한 오픈소스 도구입니다.\nAWS, Google Cloud Platform, Microsoft Azure 등 다양한 클라우드 서비스 및 온프레미스 인프라를 지원하며, 코드로 인프라를 구성하고 변경사항을 추적, 관리할 수 있습니다. 테라폼을 사용하는 이유는 다음과 같습니다. 장점: 코드로 인프라를 관리하기 때문에, 반복적이고 일관성 있는 인프라 구성이 가능합니다. 코드 관리 도구(Git 등)를 사용하여 변경 이력을 추적하고, 이력에 따라 인프라를 복원할 수 있습니다. 다양한 클라우드 서비스 및 온프레미스 인프라를 지원하며, 인프라 복잡도가 높아지더라도 코드로 관리할 수 있습니다. 테라폼은 인프라를 변경할 때 새로운 인프라를 만들고 이전 인프라를 제거하는 방식으로 변경사항을 적용합니다. 이를 통해 변경사항 적용 중에도 인프라의 안정성을 유지할 수 있습니다. 단점: 학습 곡선이 높습니다. …","fields":{"slug":"/infra/terraform-standard/contents/"},"frontmatter":{"categories":"인프라","title":"테라폼(Terraform) 기초의 모든것!","date":"April 25, 2023"}},"next":{"fields":{"slug":"/infra/terraform-standard/eks/"}},"previous":{"fields":{"slug":"/CS/backend-interview/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}